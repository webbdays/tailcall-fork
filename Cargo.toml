[package]
name = "tailcall"
version = "0.1.0"
edition = "2021"

[[bin]]
name = "tailcall"
path = "src/main.rs"

[workspace.dependencies]
anyhow = "1.0.82"
async-graphql = { version = "7.0.3" }
futures-util = { version = "0.3.30" }
indexmap = "2.2"
insta = { version = "1.38.0", features = ["json"] }
tokio = { version = "1.37.0", features = ["rt", "time"] }

[dependencies]
# dependencies specific to CLI must have optional = true and the dep should be added to default feature.
# one needs to add default feature tag if it is something IO related or might conflict with WASM

mimalloc = { version = "0.1.39", default-features = false, optional = true }
http-cache-reqwest = { version = "0.13.0", features = [
    "manager-moka",
], default-features = false, optional = true }
moka = { version = "0.12.6", default-features = false, features = [
    "future",
], optional = true }
hyper-rustls = { version = "0.25.0", optional = true }
rustls = { version = "0.23.3", optional = true, features = [
    "std",
], default-features = false }
rustls-pki-types = "1.4.1"
inquire = { version = "0.7.4", optional = true }
opentelemetry-otlp = { version = "0.15.0", features = [
    "trace",
    "logs",
    "metrics",
    # required to make grpc requests
    "tls-roots",
], optional = true }
opentelemetry-system-metrics = { version = "0.1.8", optional = true }

# dependencies safe for wasm:

rustls-pemfile = { version = "1.0.4" }
schemars = { version = "0.8.16", features = ["derive"] }
hyper = { version = "0.14", features = ["server"], default-features = false }
tokio = { workspace = true }
anyhow = { workspace = true }
derive_setters = "0.1.6"
thiserror = "1.0.58"
serde_json = { version = "1.0", features = ["preserve_order"] }
serde = { version = "1.0", features = ["derive"] }
serde_qs = "0.13"
serde_yaml = "0.9"
serde_urlencoded = "0.7.1"
url = { version = "2", features = ["serde"] }
reqwest = { version = "0.11", features = [
    "json",
    "rustls-tls",
], default-features = false }
indexmap = { workspace = true }
once_cell = "1.19.0"
clap = { version = "4.5.4", features = ["derive"] }
colored = "2"
regex = "1.10.4"
reqwest-middleware = "0.2.5"
async-trait = "0.1.80"
serde_path_to_error = "0.1.16"
cache_control = "0.2.0"
nom = "7.1.3"
exitcode = "1.1.2"
resource = "0.5.0"
stripmargin = "0.1.1"
num_cpus = "1.16.0"
fnv = "1.0.7"
futures-channel = { version = "0.3.30" }
futures-timer = { version = "3.0.3", features = ["wasm-bindgen"] }
futures-util = { workspace = true }
lru = { version = "0.12.3" }
webbrowser = { version = "0.8.15", features = ["hardened", "disable-wsl"] }
async-std = { version = "1.12.0", features = [
    "wasm-bindgen-futures",
    "unstable",
] }
ttl_cache = { version = "0.5.1", features = ["stats"] }
protox = "0.6.0"
protox-parse = "0.6.0"
prost-reflect = { version = "0.13.1", features = ["serde"] }
prost = "0.12.4"
update-informer = { version = "1.1.0", default-features = false, features = [
    "github",
    "reqwest",
], optional = true }
lazy_static = "1.4.0"
which = { version = "6.0.1", optional = true }
async-recursion = "1.1.0"
tempfile = "3.10.1"
deno_core = { version = "0.274.0", optional = true, features = [
    "v8_use_custom_libcxx",
], default-features = false }
strum_macros = "0.26.2"
# TODO: disable some levels with features?
tracing = "0.1.40"
tracing-subscriber = { version = "0.3.18", features = [
    "default",
    "fmt",
    "env-filter",
] }
tracing-opentelemetry = "0.23.0"
getrandom = { version = "0.2.14", features = ["js"] }
prometheus = "0.13.3"
tonic = { version = "0.11.0", default-features = false }
opentelemetry-semantic-conventions = "0.14.0"
opentelemetry = { version = "0.22.0", features = ["trace", "logs", "metrics"] }
opentelemetry_sdk = { version = "0.22.1", features = [
    "trace",
    "logs",
    "metrics",
] }
opentelemetry-http = "0.11.1"
opentelemetry-stdout = { version = "0.3.0", features = [
    "trace",
    "logs",
    "metrics",
] }
opentelemetry-appender-tracing = { version = "0.3.0" }
opentelemetry-prometheus = "0.15.0"
phonenumber = "0.3.4"
chrono = "0.4.37"
async-graphql-extension-apollo-tracing = { git = "https://github.com/tailcallhq/async_graphql_apollo_studio_extension/" }
headers = "0.3.9" # previous version until hyper is updated to 1+
mime = "0.3.17"
htpasswd-verify = { version = "0.3.0", git = "https://github.com/twistedfall/htpasswd-verify", rev = "ff14703083cbd639f7d05622b398926f3e718d61" } # fork version that is wasm compatible
jsonwebtoken = "9.3.0"
async-graphql-value = "7.0.3"
async-graphql = { workspace = true, features = [
    "dynamic-schema",
    "dataloader",
    "apollo_tracing",
    "opentelemetry",
] }
dotenvy = "0.15"
convert_case = "0.6.0"
rand = "0.8.5"

[build-dependencies]
tonic-build = "0.11.0"
protoc-bin-vendored = "3.0.0"


[dev-dependencies]
criterion = "0.5.1"
httpmock = "0.7.0"
pretty_assertions = "1.4.0"
stripmargin = "0.1.1"
markdown = "1.0.0-alpha.16"
insta = { workspace = true }
tempfile = "3.10.1"
temp-env = "0.3.6"
maplit = "1.0.2"

[features]

# Feature Flag to enable V8.
# V8 currently is not support on all platforms so, we control it via this feature flag.
js = ["dep:deno_core"]

# Feature Flag to core CLI features.
# This is created to control what we expose for WASM.
# Will be deprecated once we move CLI to it's own crate and WASM builds won't depend on it.
cli = [
    "tokio/fs",
    "tokio/rt-multi-thread",
    "dep:mimalloc",
    "dep:http-cache-reqwest",
    "dep:moka",
    "dep:hyper-rustls",
    "dep:rustls",
    "dep:inquire",
    "dep:which",
    "dep:update-informer",
    "opentelemetry_sdk/testing",
    "opentelemetry_sdk/rt-tokio",
    "dep:opentelemetry-otlp",
    "dep:opentelemetry-system-metrics",
]

# Feature flag to enable all default features.
# This is used by default locally while developing and on CI.
# We generally want to interface via CLI and have V8 enabled, while running tests.
default = ["cli", "js"]


[workspace]
members = [
    ".",
    "autogen",
    "tailcall-aws-lambda",
    "tailcall-cloudflare",
    "tailcall-query-plan",
]

# Boost execution_spec snapshot diffing performance
[profile.dev.package]
insta.opt-level = 3
similar.opt-level = 3

[profile.release]
opt-level = 3
codegen-units = 1
panic = 'abort'
lto = 'thin'
debug = false
incremental = false
overflow-checks = false

[profile.release.package.tailcall-cloudflare]
strip = true
codegen-units = 1
opt-level = 'z'

[[bench]]
name = "json_like_bench"
harness = false

[[bench]]
name = "request_template_bench"
harness = false

[[bench]]
name = "data_loader_bench"
harness = false

[[bench]]
name = "impl_path_string_for_evaluation_context"
harness = false

[[bench]]
name = "protobuf_convert_output"
harness = false
